import { NextResponse } from 'next/server';
import type { ElementHandlers } from './html-rewriter';
export type NextDataTransform = <T extends {
    pageProps?: Record<string, any>;
}>(props: T) => T;
export declare class MiddlewareResponse extends NextResponse {
    originResponse: Response;
    private readonly dataTransforms;
    private readonly elementHandlers;
    constructor(originResponse: Response, init?: ResponseInit);
    /**
     * Transform the page props before they are passed to the client.
     * This works for both HTML pages and JSON data
     */
    transformData(transform: NextDataTransform): void;
    /**
     * Rewrite the response HTML with the given selector and handlers
     */
    rewriteHTML(selector: string, handlers: ElementHandlers): void;
    /**
     * Sets the value of a page prop.
     * @see transformData if you need more control
     */
    setPageProp(key: string, value: unknown): void;
    /**
     * Replace the text of the given element. Takes either a string or a function
     * that is passed the original string and returns new new string.
     * @see rewriteHTML for more control
     */
    replaceText(selector: string, valueOrReplacer: string | ((input: string) => string)): void;
    get headers(): Headers;
    get status(): number;
}
